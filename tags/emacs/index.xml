<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>emacs on SqrtMinusOne</title>
    <link>https://sqrtminusone.xyz/tags/emacs/</link>
    <description>Recent content in emacs on SqrtMinusOne</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 10 May 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://sqrtminusone.xyz/tags/emacs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Extending elfeed with PDF viewer and subtitles fetcher</title>
      <link>https://sqrtminusone.xyz/posts/2022-05-09-pdf/</link>
      <pubDate>Tue, 10 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://sqrtminusone.xyz/posts/2022-05-09-pdf/</guid>
      <description>Intro elfeed is one of the most popular Emacs packages, and it&amp;rsquo;s also one in which I ended up investing a lot of effort. I wrote about the EMMS integration and even made a custom frontpage to my liking.
However, sites frequently limit the amount of information shipped in the RSS feed. Oftentimes the entry doesn&amp;rsquo;t include the entire content (of which, by the way, this blog was guilty).
Also, there&amp;rsquo;s non-textual content, of which in this post I consider YouTube subscriptions.</description>
    </item>
    
    <item>
      <title>A few cases of literate configuration</title>
      <link>https://sqrtminusone.xyz/posts/2022-02-12-literate/</link>
      <pubDate>Sat, 12 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://sqrtminusone.xyz/posts/2022-02-12-literate/</guid>
      <description>A post that arose from the discussion of literate configuration on the System Crafters Discord.
I am using the literate configuration strategy (based on Emacs&amp;rsquo; Org Mode) to manage most of my configuration files. A piece of such a configuration can be as simple as an Org file, which is tangled to one or many plain-text configuration files, but it can be more.
In my opinion, a literate configuration can be more straightforward and concise than a &amp;ldquo;normal&amp;rdquo; one, thanks to Org Mode&amp;rsquo;s capabilities of working with source code.</description>
    </item>
    
    <item>
      <title>Using EXWM and perspective.el on multi-monitor setup</title>
      <link>https://sqrtminusone.xyz/posts/2022-01-03-exwm/</link>
      <pubDate>Mon, 03 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://sqrtminusone.xyz/posts/2022-01-03-exwm/</guid>
      <description>I wrote about Emacs and i3 integration around two months ago. Shortly after however, I decided to give EXWM another try, mainly because my largest reservation - lack of performance - seems to have been resolved by updates to the native compilation since my first attempt. Or I may have lost some sensitivity to that issue. Regardless, the second dive into EXWM thus far feels successful, and I think it&amp;rsquo;s the right time to share some of my thoughts on the subject.</description>
    </item>
    
    <item>
      <title>Getting a consistent set of keybindings between i3 and Emacs</title>
      <link>https://sqrtminusone.xyz/posts/2021-10-04-emacs-i3/</link>
      <pubDate>Wed, 06 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://sqrtminusone.xyz/posts/2021-10-04-emacs-i3/</guid>
      <description>Intro One advantage of EXWM for an Emacs user is that EXWM gives one set of keybindings to manage both Emacs windows and X windows. In every other WM, like my preferred i3wm, two orthogonal keymaps seem to be necessary. But, as both programs are quite customizable, I want to see whether I can replicate at least some part of the EXWM goodness in i3.
But why not just use EXWM?</description>
    </item>
    
    <item>
      <title>My EMMS and elfeed setup</title>
      <link>https://sqrtminusone.xyz/posts/2021-09-07-emms/</link>
      <pubDate>Wed, 08 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://sqrtminusone.xyz/posts/2021-09-07-emms/</guid>
      <description>Intro  This is the current state of my quest to live in Emacs, at least in part of reading RSS and music.
Even before I lost my mind about customizing obscure keyboard-driven software, I tried Inoreader, self-hosted FreshRSS, and then newsboat from the RSS side and ncmpcpp+MPD from the audio player side. At some point, I got curious about whether I can do the same in Emacs.
The respective emacs packages, elfeed and EMMS, proved somewhat tricky to set up, i.</description>
    </item>
    
    <item>
      <title>Replacing Jupyter Notebook with Org Mode</title>
      <link>https://sqrtminusone.xyz/posts/2021-05-01-org-python/</link>
      <pubDate>Sat, 01 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://sqrtminusone.xyz/posts/2021-05-01-org-python/</guid>
      <description>Why? Jupyter Notebook and its successor Jupyter Lab providing an interactive development environment for many programming languages are in lots of ways great pieces of software.
But while I was using the former, and then the latter, I was also an as-full-time-as-one-can-get NeoVim user. &amp;ldquo;As one can get&amp;rdquo; is because, of course, there is no sensible way to extend the NeoVim editing experience to the Jupyter ecosystem.
A possibility for change appeared with my discovery of Emacs not so long ago.</description>
    </item>
    
    <item>
      <title>Multiple Gmail accounts &amp; labels with Emacs</title>
      <link>https://sqrtminusone.xyz/posts/2021-02-27-gmail/</link>
      <pubDate>Sat, 27 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://sqrtminusone.xyz/posts/2021-02-27-gmail/</guid>
      <description>Intro For quite some time, e-mail seemed like an anomaly in my workflow. I am a long time Gmail user, and my decade-old account has a somewhat formidable quantity of labels and filters. My messages are often assigned multiple labels, and I also like to keep only a bunch of messages in the inbox.
Although, in my opinion, Gmail web UI was and still is leagues ahead of many of its competitors and even allows keyboard-centric workflow, it&amp;rsquo;s awkward to use with a keyboard-driven browser, and for no money on Earth I would enable browser notifications.</description>
    </item>
    
  </channel>
</rss>
